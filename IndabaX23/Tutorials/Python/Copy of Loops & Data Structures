{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Welcome to this Python track on Loops and Data Structures!\n","\n","\n","**Content Creator(s):**  Richard Nii Lante Lawson, Data Scientist and Machine Learning Engineer, (Co-Founder of AiMlCamp)\n","\n","**Content Reviewer(s):** Deborah D Kanubala, Salomey Osei"],"metadata":{"id":"U4ofb3b28gNb"}},{"cell_type":"markdown","source":["## **Content**\n","\n","\n","1. [Data Structures and Usefulness of Data Structures](#data_structures)\n","  \n","  1.1 [Applications of Data Structures](#applications)\n","\n","\n","2. [Types of Data Strutures](#types)\n","\n","  2.1 [Lists](#lists)\n","\n","  2.2 [Tuples](#tuples)\n","\n","  2.3 [Dictionaries](#dictionaries)\n","\n","3. [Nested Data Strutures](#nested)\n","\n","\n","4. [Loops](#loops)\n","\n","  4.1 [Types of Loops](#types_loops)\n","\n","  4.2 [For Loops](#for_loops)\n","\n","  4.3 [While Loops](#while_loops)\n","\n","  4.4 [While-Else Loops](#while_else_loops)\n","\n","  4.5 [Break Statement](#break)\n","\n","  4.6 [Continue Statement](#continue)\n","\n","\n","5. [Conclusion](#conclusion)\n","\n"],"metadata":{"id":"G3igBi9Qzzv6"}},{"cell_type":"markdown","source":["\n","---\n","<a name=\"data_structures\"></a>\n","# **1.Data Structures?**\n","\n","\n","#### A specialized format for organizing, processing, retrieving and storing data"],"metadata":{"id":"hiLL0w9e05hW"}},{"cell_type":"markdown","source":["##**Why Data Structures?**"],"metadata":{"id":"8bzgGMOC1gj5"}},{"cell_type":"markdown","source":["<img src= \"https://media.tenor.com/D5crolYtMjUAAAAC/batman-thinking.gif\" width =\"700px\">\n","\n","*   In programming as they provide a way to store, organize, and manipulate data efficiently.\n","\n","*   Help programmers manage large amounts of data effectively and optimize algorithm performance.\n","\n","*   Can be used to accomplish tasks such as searching, sorting, filtering, and modifying data.\n","\n","*   Can lso help to reduce complexity in programs and make it easier to maintain code.\n","\n","*   Using the right data structure for a specific task can significantly improve the performance of an application, reduce memory usage, and enhance code readability.\n","\n","*   Therefore, it is crucial for programmers to have a good understanding of data structures and their applications.\n"],"metadata":{"id":"cNbrO4n-1R4t"}},{"cell_type":"markdown","source":["\n","\n","---\n","<a name=\"applications\"></a>\n","# **1.1.Applications of Data Strutcture?**\n","\n","\n","*   List\n","*   Tuple\n","*   Dictionary\n","*   Nested Data Structure"],"metadata":{"id":"AIhJmN9M2pxC"}},{"cell_type":"markdown","source":["\n","---\n","<a name=\"types\"></a>\n","# **2. Types of Data Structures**"],"metadata":{"id":"_j9VDuhb01bE"}},{"cell_type":"markdown","source":["\n","\n","---\n","<a name=\"lists\"></a>\n","### **2.1 Lists?**\n","\n","\n","\n","Lists are one of the most commonly used data structures in Python. They are used to store a collection of items, such as numbers or strings. Here's how you can create a list:\n","\n","`sample_list = ['A', 3, True, [1, 2, 3], 'Lawson']`"],"metadata":{"id":"bwH5UkdY1C0r"}},{"cell_type":"code","source":["# Creating a list of numbers\n","numbers = [2, 4, 6, 8, 10]"],"metadata":{"id":"PosPNh7x56lq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Displaying all list of numbers\n","numbers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZYe3rkur6S9N","executionInfo":{"status":"ok","timestamp":1683759937476,"user_tz":0,"elapsed":507,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"eaed5c20-9dcf-416b-a77e-086c1afe4a29"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2, 4, 6, 8, 10]"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Accessing the elements of a list\n","print(numbers[0])  # 2\n","print(numbers[-1])  # 10"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gtTlgvT95948","executionInfo":{"status":"ok","timestamp":1683759881971,"user_tz":0,"elapsed":721,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"02b7c0c1-a8c8-45bd-9969-44a40ac0093f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","10\n"]}]},{"cell_type":"code","source":["# Modifying elements in a list\n","numbers[1] = 3\n","print(numbers)  # [2, 3, 6, 8, 10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f_Yf-cs259n1","executionInfo":{"status":"ok","timestamp":1683760141442,"user_tz":0,"elapsed":480,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"3e9e32f4-66f0-47f7-a66c-2c716b4131ca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 3, 6, 8, 10]\n"]}]},{"cell_type":"code","source":["# Adding elements to a list\n","numbers.append(12)\n","print(numbers)  # [2, 3, 6, 8, 10, 12]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"luFRIWyu59kW","executionInfo":{"status":"ok","timestamp":1683760147308,"user_tz":0,"elapsed":527,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"3d284f37-d44e-4c1f-ea5c-a1785f54883e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 3, 6, 8, 10, 12]\n"]}]},{"cell_type":"code","source":["# Removing elements from a list\n","numbers.pop(3)  # this uses the array counter\n","print(numbers)  # [2, 3, 6, 10, 12]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4qvXv4bP59hi","executionInfo":{"status":"ok","timestamp":1683760155475,"user_tz":0,"elapsed":441,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"2ed7a98c-6813-4b0d-ce45-52003bf03ca9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 3, 6, 10, 12]\n"]}]},{"cell_type":"markdown","source":["**List Slicing**\n","\n","One of the useful features of lists is list slicing, which allows you to extract a subset of elements from a list based on their index.\n","\n","List slicing syntax is as follows: `list[start:stop:step]`\n","\n","**start** is the index of the first element you want to slice (inclusive).\n","**stop** is the index of the last element you want to slice (exclusive).\n","**step** is the number of items to skip between each element (default is 1)."],"metadata":{"id":"C4mxoa7kFRKO"}},{"cell_type":"code","source":["# Example\n","\n","fruits = ['akutu', 'akwadu', 'waatr3', 'yoryi', 'michingoro', 'atadwre']"],"metadata":{"id":"VmxGyit-F48O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# slice from index 1 up to (but not including) index 4\n","print(fruits[1:4])   # output: ['akwadu', 'waatr3', 'yoryi']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UNX43y5gGNNf","executionInfo":{"status":"ok","timestamp":1683763221479,"user_tz":0,"elapsed":375,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"3164e30e-9640-42e3-8e04-aa29a08313be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['akwadu', 'waatr3', 'yoryi']\n"]}]},{"cell_type":"code","source":["# slice from the beginning up to (but not including) index 3\n","print(fruits[:3])    # output: ['akutu', 'akwadu', 'waatr3']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-Z3_9NoyGYhw","executionInfo":{"status":"ok","timestamp":1683763224570,"user_tz":0,"elapsed":434,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"7464729d-1485-4cce-f515-8a5522fdf3e1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['akutu', 'akwadu', 'waatr3']\n"]}]},{"cell_type":"code","source":["# slice from index 2 to the end of the list\n","print(fruits[3:])    # output: ['waatr3', 'yoryi', 'michingoro', 'atadwre']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rktF6K_FFNRP","executionInfo":{"status":"ok","timestamp":1683763227362,"user_tz":0,"elapsed":359,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"babd2352-9796-4a4b-8d52-80c432c05e2f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['waatr3', 'yoryi', 'michingoro', 'atadwre']\n"]}]},{"cell_type":"code","source":["# slice every other element\n","print(fruits[::3])   # output: ['akutu', 'waatr3', 'michingoro']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tzOFjcJPGsTP","executionInfo":{"status":"ok","timestamp":1683763230121,"user_tz":0,"elapsed":479,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"ecc6e726-b0b7-440e-fec2-934ef2d1d7fc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['akutu', 'waatr3', 'michingoro']\n"]}]},{"cell_type":"markdown","source":["**NB:**\n","\n","List slicing is a powerful technique that allows you to manipulate lists in a concise and efficient manner.\n","\n","It can be used in various programming scenarios such as data manipulation, text processing, and machine learning."],"metadata":{"id":"yQRA6hDAHG7G"}},{"cell_type":"markdown","source":["\n","---\n","<a name=\"tuples\"></a>\n","### **2.2 Tuples**\n","\n","\n","Tuples are similar to lists, but they are immutable, meaning you can't modify them once they are created. Here's how you can create a tuple:\n","\n","`sample_tuple = (1,2,3,4,5)`\n","\n"],"metadata":{"id":"xHYo0OA27nja"}},{"cell_type":"code","source":["# Creating a tuple of colors\n","colors = (\"red\", \"green\", \"blue\")"],"metadata":{"id":"51UafYsr8HMe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Displaying all tuple of colors\n","colors"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ssOMT7Bz8Srt","executionInfo":{"status":"ok","timestamp":1683760450184,"user_tz":0,"elapsed":472,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"fd7d03d4-8c15-4798-b2ef-f543b10889da"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('red', 'green', 'blue')"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# Accessing the elements of a tuple\n","print(colors[0])  # red\n","print(colors[-1])  # blue"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i2kb0LEz8KZP","executionInfo":{"status":"ok","timestamp":1683760455540,"user_tz":0,"elapsed":512,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"b86182ac-c935-4027-9232-870139a72a4a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["red\n","blue\n"]}]},{"cell_type":"code","source":["# Trying to modify elements in a tuple - this will result in an error\n","# colors[1] = \"yellow\""],"metadata":{"id":"ICJ39SzO8KI8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["\n","---\n","<a name=\"dictionaries\"></a>\n","### **2.3 Dictionaries**\n","\n","Dictionaries are used to store key-value pairs. Each key in the dictionary maps to a value, just like words in a dictionary map to definitions. Here's how you can create a dictionary:\n","\n","`sample_dictionary = {'apple': 1, 'banana': 2, 'orange': 3}`\n","\n"],"metadata":{"id":"ZI4td18-8gSE"}},{"cell_type":"code","source":["# Creating a dictionary of information about a person\n","person = {\n","    \"name\": \"Nii Lante\",\n","    \"age\": 16,\n","    \"gender\": \"male\"\n","}"],"metadata":{"id":"Mtj7PRjN80zM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Displaying the dictionary\n","person"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jmUqcVye89kW","executionInfo":{"status":"ok","timestamp":1683760662188,"user_tz":0,"elapsed":453,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"cba0beea-9255-43e3-aaab-9e6b1f660513"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'name': 'Nii Lante', 'age': 16, 'gender': 'male'}"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# Accessing the elements of a dictionary\n","print(person[\"name\"])  # Nii Lante\n","print(person.get(\"age\"))  # 16"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sFjgce5A80pm","executionInfo":{"status":"ok","timestamp":1683760684622,"user_tz":0,"elapsed":443,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"a896e04d-4fb7-413e-c13f-140127c48619"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nii Lante\n","16\n"]}]},{"cell_type":"code","source":["# Modifying elements in a dictionary\n","person[\"name\"] = \"Richard\"\n","print(person)  # {'name': 'Richard', 'age': 16, 'gender': 'male'}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uRHHFVUw80aM","executionInfo":{"status":"ok","timestamp":1683760763747,"user_tz":0,"elapsed":623,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"610c900b-eb50-4af3-f65b-d4f13af229e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'name': 'Richard', 'age': 16, 'gender': 'male'}\n"]}]},{"cell_type":"code","source":["# Adding elements to a dictionary\n","person[\"occupation\"] = \"engineer\"\n","print(person)  # {'name': 'Richard', 'age': 16, 'gender': 'male', 'occupation': 'engineer'}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EFUJLZg_9ftt","executionInfo":{"status":"ok","timestamp":1683760768477,"user_tz":0,"elapsed":14,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"9d8859a4-9472-4a7d-f148-7bb560b676ad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'name': 'Richard', 'age': 16, 'gender': 'male', 'occupation': 'engineer'}\n"]}]},{"cell_type":"code","source":["# Removing elements from a dictionary\n","person.pop(\"gender\")\n","print(person)  # {'name': 'Richard', 'age': 16, 'occupation': 'engineer'}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I0rax5ah9qF_","executionInfo":{"status":"ok","timestamp":1683760801983,"user_tz":0,"elapsed":443,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"bba870aa-4ba5-4600-c6ce-e489a0994cb4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'name': 'Richard', 'age': 16, 'occupation': 'engineer'}\n"]}]},{"cell_type":"markdown","source":["\n","---\n","<a name=\"nested\"></a>\n","# **3. Nested data structures**\n","\n","You can also create nested data structures in Python, such as a list of dictionaries:\n","\n","`sample_list_of_nested_data_structures =`\n","```\n","[\n","    {'name': 'Alice', 'age': 30},\n","    {'name': 'Bob', 'age': 40},\n","    {'name': 'Charlie', 'age': 50}\n","]\n","\n"],"metadata":{"id":"kwA9ZJX29zZq"}},{"cell_type":"code","source":["# Creating a list of dictionaries of book information\n","books = [\n","    {\"title\": \"Children of the Street: An Inspector Darko Dawson Mystery\", \"author\": \"Kwei Quartey\", \"year\": 2011},\n","    {\"title\": \"Wife of the Gods\", \"author\": \"Kwei Quartey\", \"year\": 2009},\n","    {\"title\": \"Ghana Must Go\", \"author\": \"Taiye Selasi.\", \"year\": 2013}\n","]"],"metadata":{"id":"YltSHCOz-msl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Displaying the nested data structure\n","books"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i-p1L66M_gAy","executionInfo":{"status":"ok","timestamp":1683761296521,"user_tz":0,"elapsed":464,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"ed8ca5b1-8b27-4e17-c761-21382a1e6179"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'title': 'Children of the Street: An Inspector Darko Dawson Mystery',\n","  'author': 'Kwei Quartey',\n","  'year': 2011},\n"," {'title': 'Wife of the Gods', 'author': 'Kwei Quartey', 'year': 2009},\n"," {'title': 'Ghana Must Go', 'author': 'Taiye Selasi.', 'year': 2013}]"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# Accessing the elements of a nested data structure\n","print(books[0][\"title\"])  # Children of the Street: An Inspector Darko Dawson Mystery\n","print(books[2][\"year\"])  # 2013"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"btKpTFXq_uXr","executionInfo":{"status":"ok","timestamp":1683761345813,"user_tz":0,"elapsed":439,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"5e80b9a0-5d81-4cb5-9558-c5f1dcc17d61"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Children of the Street: An Inspector Darko Dawson Mystery\n","2013\n"]}]},{"cell_type":"code","source":["# Modifying elements in a nested data structure\n","books[0][\"year\"] = 1953\n","books[0][\"author\"] = 'Nii Lante'\n","print(books[0])  # {'title': 'Children of the Street: An Inspector Darko Dawson Mystery', 'author': 'Nii Lante', 'year': 1953}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AV_4ZVrv_67X","executionInfo":{"status":"ok","timestamp":1683761453828,"user_tz":0,"elapsed":382,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"2c92be85-2b45-4ed5-b6c9-275b6749b345"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'title': 'Children of the Street: An Inspector Darko Dawson Mystery', 'author': 'Nii Lante', 'year': 1953}\n"]}]},{"cell_type":"markdown","source":["<img src= \"https://media.tenor.com/0-TWXkZwShcAAAAC/do-you-understand-chef.gif\" width =\"700px\">"],"metadata":{"id":"02g6LXiXAxSL"}},{"cell_type":"markdown","source":["##**Why Loops?**"],"metadata":{"id":"UGO2pyIZVNj_"}},{"cell_type":"markdown","source":["<img src= \"https://media.tenor.com/Jf1cfpzLyyMAAAAC/how-many-times-do-we-have-to-go-through-this-eric-cartman.gif\" width =\"700px\">\n","\n"],"metadata":{"id":"oVivPkWqoJeg"}},{"cell_type":"markdown","source":["Loops in Python are essential programming constructs that allow you to execute a block of code multiple times. They help you automate repetitive tasks and make your code more efficient. Loops are useful when you need to iterate over a collection of data or perform a specific task multiple times.\n","\n"],"metadata":{"id":"G36Ey6JVV26E"}},{"cell_type":"markdown","source":["In Python, there are two main types of ***loops: While loops and For loops***. We will also cover the While-else loop and Jump statements (break, continue) that can be used to modify the behavior of loops."],"metadata":{"id":"JnMGfyHI9yuE"}},{"cell_type":"markdown","source":["\n","\n","---\n","<a name=\"loops\"></a>\n","# **4 Loops**"],"metadata":{"id":"cu3Xj5-1_lut"}},{"cell_type":"markdown","source":["Sequence of instructions that is continually repeated until a certain condition is reached\n","\n","<img src= \"https://statisticsglobe.com/wp-content/uploads/2020/09/for-while-repeat-loop-in-r-programming.png\" width =\"600px\">"],"metadata":{"id":"865DKgvl_nP3"}},{"cell_type":"markdown","source":["\n","\n","\n","---\n","<a name=\"types_loops\"></a>\n","# **4.1 Types of Loops**\n","\n","*  For loop\n","\n","*  While loop\n","\n","\n","*  While-else loop"],"metadata":{"id":"5txRQDNOCG3a"}},{"cell_type":"markdown","source":["\n","---\n","<a name=\"for_loops\"></a>\n","### **4.2 For loops**\n","\n","A For loop is used when we want to iterate over a sequence of values, such as a list, tuple, or string.\n","\n","<img src= \"https://statisticsglobe.com/wp-content/uploads/2020/09/for-loop-in-r.png\" width =\"600px\">\n","\n","Here's the syntax for a for loop:\n","\n","```\n","for item in sequence:\n","    # code block\n","\n","```\n","\n","The `item` variable takes on the value of each element in the sequence, one at a time, and the code block is executed for each value. Let's look at a simple example that prints the elements of a list:"],"metadata":{"id":"oqmGPc2UC2cN"}},{"cell_type":"code","source":["# For loop\n","for number in numbers:\n","    print(number)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ELWfmjZ3C6rO","executionInfo":{"status":"ok","timestamp":1683762183466,"user_tz":0,"elapsed":349,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"f1cfcb4f-af53-40b4-87b4-bf0fe2eabf0b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","3\n","6\n","10\n","12\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"j9us11r23wdC"}},{"cell_type":"markdown","source":[],"metadata":{"id":"A2Obzm513xO2"}},{"cell_type":"markdown","source":["Write a Python code snippet to print all the even numbers from 1 to 20 using a for loop.\n"],"metadata":{"id":"IKsBtLGP3zGg"}},{"cell_type":"code","source":["for i in range(2,21,2):\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H1C0Sh9R32Gk","executionInfo":{"status":"ok","timestamp":1707901760059,"user_tz":0,"elapsed":3,"user":{"displayName":"Hanifatu Napari Mumuni","userId":"13709185501280612548"}},"outputId":"70f68859-f029-4457-e8eb-958d7cf59b4a"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","4\n","6\n","8\n","10\n","12\n","14\n","16\n","18\n","20\n"]}]},{"cell_type":"markdown","source":["\n","\n","\n","---\n","<a name=\"while_loops\"></a>\n","### **4.3 While loops**\n","\n","A While loop is used when we want to repeat a block of code until a specific condition is met. The code block is executed repeatedly as long as the condition remains true.\n","\n","<img src= \"https://statisticsglobe.com/wp-content/uploads/2020/09/while-loop-in-r.png\" width =\"600px\">\n","\n","Here's the syntax for a while loop:\n","\n","```\n","while condition:\n","    # code block\n","\n","```\n","\n"],"metadata":{"id":"4oWMvGQpCxRx"}},{"cell_type":"code","source":["# While loop\n","i = 0\n","while i < len(colors):\n","    print(colors[i])\n","    i += 1\n","    i = i+1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pl2JjUfcDke1","executionInfo":{"status":"ok","timestamp":1683762225918,"user_tz":0,"elapsed":445,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"0a0356be-2044-45dd-c2f0-9d38ee3901f7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["red\n","green\n","blue\n"]}]},{"cell_type":"markdown","source":["\n","---\n","<a name=\"while_else_loops\"></a>\n","### **4.4 While Else Loops**\n","\n","\n","A While Else executes else block when the while condition becomes False\n","\n","<img src= \"https://pythonexamples.org/images/python-while-else.svg\" width =\"600px\">\n","\n","Here's the syntax for a for loop:\n","\n","```\n","while condition:\n","    # code block\n","else:\n","    # code block\n","\n","```\n","\n","The `else` block is executed after the loop has finished executing, whether the condition was true or false. Let's look at an example that demonstrates the use of a While-else loop:"],"metadata":{"id":"22i0A0RjGMaA"}},{"cell_type":"code","source":["# While-else loop\n","j = 0\n","while j < len(numbers):\n","    print(numbers[j])\n","    j += 1\n","else:\n","    print(\"All numbers have been printed\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RhtVzQs_HDr_","executionInfo":{"status":"ok","timestamp":1683889758389,"user_tz":0,"elapsed":351,"user":{"displayName":"Deborah Kanubala","userId":"11105167366560627005"}},"outputId":"9f8bd6fd-8a37-4ce1-940b-0a795e181300"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","4\n","6\n","8\n","10\n","All numbers have been printed\n"]}]},{"cell_type":"markdown","source":["\n","---\n","<a name=\"break_statement\"></a>\n","### **4.5 Break Statement**\n","\n","It terminates the current loop and resumes execution at the next statement\n","\n","<img src= \"https://www.tutorialspoint.com/python/images/cpp_break_statement.jpg\" width =\"300px\">\n","\n","Here's the syntax for a **break statement**:\n","\n","```\n","# First Example\n","word = 'Python'\n","for letter in word:\n","    if letter == 'h':\n","        break\n","    print(f'Current Letter: {letter}')\n","  \n","# Second Example\n","var = 10\n","while var > 0:              \n","    print(f'Current variable value: {var}')\n","    var -= 1\n","    if var == 5:\n","        break\n","\n","print('Good bye!')\n","\n","```"],"metadata":{"id":"QnmSx0shI49D"}},{"cell_type":"code","source":["# First Example\n","word = 'Python'\n","for letter in word:\n","    if letter == 'h':\n","        break\n","    print(f'Current Letter: {letter}')\n","\n","# Second Example\n","var = 10\n","while var > 0:\n","    print(f'Current variable value: {var}')\n","    var -= 1\n","    if var == 5:\n","        break\n","\n","print('Good bye!')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bqWi4qSALgyn","executionInfo":{"status":"ok","timestamp":1683764461827,"user_tz":0,"elapsed":486,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"87104738-cc24-4137-e152-473cebc76bd8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Current Letter: P\n","Current Letter: y\n","Current Letter: t\n","Current variable value: 10\n","Current variable value: 9\n","Current variable value: 8\n","Current variable value: 7\n","Current variable value: 6\n","Good bye!\n"]}]},{"cell_type":"code","source":["# Break statement\n","for book in books:\n","    if book[\"author\"] == \"Nii Lante\":\n","        print(\"Book found:\", book[\"title\"])\n","        break"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P1TynkRqH4iA","executionInfo":{"status":"ok","timestamp":1683763515125,"user_tz":0,"elapsed":419,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"41609dea-7c98-4030-d72f-faa803f1ed7c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Book found: Children of the Street: An Inspector Darko Dawson Mystery\n"]}]},{"cell_type":"markdown","source":["\n","---\n","<a name=\"continue_statement\"></a>\n","### **4.6 Continue Statement**\n","It returns the control to the beginning of the *while loop*.. The ***continue statement*** rejects all the remaining statements in the current iteration of the loop and moves the control back to the top of the loop.\n","\n","The ***continue statement*** can be used in both while and for loops.\n","\n","<img src= \"https://www.tutorialspoint.com/python/images/cpp_continue_statement.jpg\" width =\"300px\">\n","\n","Here's the syntax for a **continue statement**:\n","\n","```\n","# First Example\n","for letter in 'Python':\n","    if letter == 'h':\n","        continue\n","    print('Current Letter:', letter)\n","\n","# Second Example\n","var = 10\n","while var > 0:\n","    var -= 1\n","    if var == 5:\n","        continue\n","    print('Current variable value:', var)\n","print('Good bye!')\n","```"],"metadata":{"id":"vP1ibI1GKU2l"}},{"cell_type":"code","source":["# First Example\n","for letter in 'Python':\n","    if letter == 'h':\n","        continue\n","    print('Current Letter:', letter)\n","\n","# Second Example\n","var = 10\n","while var > 0:\n","    var -= 1\n","    if var == 5:\n","        continue\n","    print('Current variable value:', var)\n","print('Good bye!')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PBTEZ9YLK7Kn","executionInfo":{"status":"ok","timestamp":1683764383361,"user_tz":0,"elapsed":441,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"29dfcd73-9e18-4a4c-87d8-bb4e1d3398ba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Current Letter: P\n","Current Letter: y\n","Current Letter: t\n","Current Letter: o\n","Current Letter: n\n","Current variable value: 9\n","Current variable value: 8\n","Current variable value: 7\n","Current variable value: 6\n","Current variable value: 4\n","Current variable value: 3\n","Current variable value: 2\n","Current variable value: 1\n","Current variable value: 0\n","Good bye!\n"]}]},{"cell_type":"code","source":["# Continue statement\n","numbers = [2, 4, 6, 8, 10]\n","\n","for number in numbers:\n","    if number % 2 == 0:\n","        continue\n","    print(number)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mXIhF3PLH6gC","executionInfo":{"status":"ok","timestamp":1683763522090,"user_tz":0,"elapsed":506,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"46341fa7-6d5e-4838-f40d-7b1d393a021c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n"]}]},{"cell_type":"code","source":["# Nested loop example\n","list_of_lists = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n","\n","for inner_list in list_of_lists:\n","    for number in inner_list:\n","        print(number)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bg6H371jIAyf","executionInfo":{"status":"ok","timestamp":1683763577766,"user_tz":0,"elapsed":4,"user":{"displayName":"Richard Nii Lante Lawson","userId":"18363127466005427831"}},"outputId":"aceb8a27-91a9-4e81-c1b0-9f2fc9c81c24"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"e4vuMbDc2_Xt"}},{"cell_type":"markdown","source":["Write a Python code snippet that assigns the value 5 to a variable x, the value 3 to a variable y, and then calculates and prints the result of x squared plus y cubed."],"metadata":{"id":"kyml1eEB3CwJ"}},{"cell_type":"code","source":["x=5\n","y=3\n","result = x ** 2 + y ** 3\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xf98CPgt3GUH","executionInfo":{"status":"ok","timestamp":1707901520676,"user_tz":0,"elapsed":6,"user":{"displayName":"Hanifatu Napari Mumuni","userId":"13709185501280612548"}},"outputId":"f9b24d86-72a7-4c83-891c-834502cff1a4"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["52\n"]}]},{"cell_type":"markdown","source":["\n","\n","---\n","<a name=\"conclusion\"></a>\n","# **5 Conclusion**\n","\n","##### That's all for this introduction to Python track on loops and data structures! We've covered while loops, for loops, jump statements, and data structures including lists, tuples, dictionaries, and nested data structures. Hopefully, this has given you a good foundation to start writing more complex programs in Python.\n","\n","##### If you want to continue learning more about Python, there are plenty of resources available online, including the official Python documentation and various online courses and tutorials. Good luck, and happy coding!"],"metadata":{"id":"E0CvZONuJd-U"}},{"cell_type":"markdown","source":["<img src= \"https://media.tenor.com/6bUnLYb54jgAAAAC/thank-you-thanks.gif\" width =\"700px\">"],"metadata":{"id":"GtgVpLAwyZog"}},{"cell_type":"markdown","source":["---\n","**=================================================================**\n","\n","#Congrats! That's it for this tutorial.\n","\n","---\n","<h1> Author:</h1>\n","\n","\n","**Richard Nii Lante Lawson**, Co-Founder @ AiMlCamp\n","\n","Email: niilantelaw@gmail.com\n","\n","LinkedIn: https://www.linkedin.com/in/theniilante/\n","\n","\n"],"metadata":{"id":"K2gsb2yYbk9I"}},{"cell_type":"markdown","source":["**References**\n","\n","**Loops**\n","\n","https://statisticsglobe.com/loops-in-r\n","\n","https://pythonexamples.org/python-loop-statements/\n","\n","**Data Structures**\n","\n","https://www.geeksforgeeks.org/data-structures/"],"metadata":{"id":"hSZ16XUJMdA3"}},{"cell_type":"markdown","source":["---\n","*This notebook was originally created by Ghana Data Science Summit for the [IndabaX Ghana](https://www.indabaxghana.com/) 2023 Conference and is published under [MIT license](https://choosealicense.com/licenses/mit/).*"],"metadata":{"id":"yezK3hUbuQ6N"}}]}